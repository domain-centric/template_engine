[//]: # (TODO: This text should be imported from the dart doc of the ExpressionFunction class using document_generator package)
A function is a piece of dart code that performs a specific task. 
So a function can basically do anything that dart code can do.
 
A function can be used anywhere in an tag expression. Wherever that particular task should be performed.

An example of a function call: cos(pi)
Should result in: -1

[//]: # (TODO: This text should be imported from the dart doc of the Identifier class using document_generator package)
**Function & Parameter & argument names:**
* are [case sensitive](https://en.wikipedia.org/wiki/Case_sensitivity) 
* must start with a lower case letter, optionally followed by (lower or upper case) letters and or digits.
* conventions: use [lowerCamelCase](https://en.wikipedia.org/wiki/Camel_case)
* must be unique and does not match a other [Tag] syntax

**Parameters vs Arguments**
* Parameters are the names used in the function definition.
* Arguments are the actual values passed when calling the function.

**Parameters:**
* A function can have zero or more parameters
* Parameters are defined as either mandatory or optional
* Optional parameters can have a default value

[//]: # (TODO: This text should be imported from the dart doc of the ArgumentParser class using document_generator package)
**Arguments:**
* Multiple arguments are separated with a comma, e.g. single argument: `cos(pi)` multiple arguments: `volume(10,20,30)`
* There are different types of arguments
  * Positional Arguments: These are passed in the order the function defines them. e.g.: `volume(10, 20, 30)`
  * Named Arguments: You can specify which parameter you're assigning a value to, regardless of order. e.g.: `volume(l=30, h=10, w=20)`
* Arguments can set a parameter only once
* You can mix positional arguments and named arguments, but positional arguments must come first
* Named arguments remove ambiguity: If you want to skip an optional argument or specify one out of order, you must name it explicitly

**Argument values:**
* must match the expected parameter type. e.g. `area(length='hello', width='world')` will result in a failure
* may be a tag expression such as a variable, constant, operation, function, or combination. e.g. `cos(2*pi)`
 
## Custom Functions
You can use prepackaged [template_engine] functions or add your own custom functions by manipulating the TemplateEngine.functionGroups field.
[//]: # (TODO: replace link with function)
See [Example](https://github.com/domain-centric/template_engine/blob/main/test/src/parser/tag/expression/function/custom_function_test.dart). 

## Available Functions
{{functionDocumentation(2)}}
